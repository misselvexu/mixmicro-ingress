spring.application.name=mixmicro-ingress-server


## server port defined, default: 7777
server.port=7777

## runtime container config properties
server.undertow.accesslog.dir=${MIXMICRO_SERVER_HOME:/tmp}/logs
server.undertow.accesslog.enabled=true
server.undertow.accesslog.pattern=common
server.undertow.accesslog.prefix=mixmicro-ingress-access.
server.undertow.accesslog.rotate=true
server.undertow.accesslog.suffix=log
server.undertow.buffer-size=1024
server.undertow.direct-buffers=true
server.undertow.io-threads=32
server.undertow.max-http-post-size=0
server.undertow.worker-threads=2000


## =====================================================================================================================
zuul.host.max-total-connections=500
zuul.host.max-per-route-connections=100
zuul.sensitive-headers=Set-Cookie
zuul.add-host-header=true
zuul.add-proxy-headers=true
## semaphores for hystrix
zuul.semaphore.max-semaphores=5000
zuul.ribbon-isolation-strategy=thread
## retry config
zuul.retryable=true


## hystrix config properties
hystrix.command.default.execution.isolation.strategy=SEMAPHORE
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10
# #发生熔断的超时时间，调整熔断超时时间，熔断时间太短，些耗时的业务部不能work熔断时太长，Zuul服务器可能会被拖垮。所以根据具体业务找到一个合适值
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
hystrix.command.default.execution.isolation.semaphore.max-semaphores=5000



## ribbon config properties
ribbon.okhttp.enabled=true
ribbon.MaxAutoRetries=0
ribbon.MaxAutoRetriesNextServer=1
ribbon.OkToRetryOnAllOperations=false
ribbon.ConnectTimeout=5000
ribbon.ReadTimeout=5000
ribbon.RetryableStatusCodes=404,502
ribbon.MaxTotalConnections=500
ribbon.MaxConnectionsPerHost=100


## feign config properties
feign.httpclient.enabled=false
feign.okhttp.enabled=true
feign.sentinel.enabled=true
feign.hystrix.enabled=false

## =====================================================================================================================
## sentinel base config
spring.cloud.sentinel.enabled=true
spring.cloud.sentinel.eager=true
spring.cloud.sentinel.log.dir=${MIXMICRO_SERVER_HOME:/tmp}/logs
spring.cloud.sentinel.filter.url-patterns=/**
spring.cloud.circuitbreaker.hystrix.enabled=false

## sentinel transport config
#spring.cloud.sentinel.transport.dashboard=172.17.16.25:4444

# 网关限流
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.server-addr=${spring.cloud.nacos.config.server-addr}
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.namespace=${spring.cloud.nacos.config.namespace}
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.group-id=DEFAULT_GROUP
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.data-id=ingress-services-flow.json
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.data-type=json
spring.cloud.sentinel.datasource.ingress-gw-flow.nacos.rule-type=gw_flow

# 网关API分组
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.server-addr=${spring.cloud.nacos.config.server-addr}
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.namespace=${spring.cloud.nacos.config.namespace}
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.group-id=DEFAULT_GROUP
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.data-id=ingress-services-gw-api-flow.json
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.data-type=json
#spring.cloud.sentinel.datasource.ingress-gw-api-group.nacos.rule-type=gw_api_group

# 网关服务熔断降级配置
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.server-addr=${spring.cloud.nacos.config.server-addr}
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.namespace=${spring.cloud.nacos.config.namespace}
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.group-id=DEFAULT_GROUP
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.data-id=ingress-services-gw-degrade.json
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.data-type=json
spring.cloud.sentinel.datasource.ingress-gw-degrade.nacos.rule-type=degrade

# 网关黑白名单
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.server-addr=${spring.cloud.nacos.config.server-addr}
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.namespace=${spring.cloud.nacos.config.namespace}
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.group-id=DEFAULT_GROUP
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.data-id=ingress-services-gw-authority.json
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.data-type=json
spring.cloud.sentinel.datasource.ingress-gw-authority.nacos.rule-type=authority

## =====================================================================================================================
## END


## swagger
mixmicro.ingress.swagger.enabled=false
mixmicro.ingress.swagger.description=Ingress Document Reference
mixmicro.ingress.swagger.title=Api Reference
mixmicro.ingress.swagger.version=${project.version}

##
mixmicro.ingress.enabled=true
mixmicro.ingress.response.transport-service-instance-cookie=true
## zuul proxy config
mixmicro.ingress.zuul.enabled=true
mixmicro.ingress.websockets.enabled=true

## logger
logging.level.com.yunlsp.framework=debug
logging.level.okhttp3=debug
logging.level.feign=debug
logging.level.org.springframework.cloud.openfeign=debug
logging.level.org.springframework.boot.web=debug
logging.level.com.yunlsp.framework.ingress=debug

server.cors.enabled=true

## management endpoints
management.metrics.tags.application=${spring.application.name}
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*